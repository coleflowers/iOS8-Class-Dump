/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, June 5, 2018 at 11:54:55 AM China Standard Time
* Operating System: Version 8.2 (Build 12D508)
* Image Source: /System/Library/CoreServices/SpringBoard.app/SpringBoard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SpringBoard/SpringBoard-Structs.h>
#import <SpringBoard/SBGestureRecognizer.h>

@interface SBFluidSlideGestureRecognizer : SBGestureRecognizer {

	int m_degreeOfFreedom;
	unsigned long long m_minTouches;
	BOOL m_blocksIconController;
	double _animationDistance;
	double _commitDistance;
	double _accelerationThreshold;
	double _accelerationPower;
	int _requiredDirectionality;
	double _defaultHandSize;
	double _handSizeCompensationPower;
	double _incrementalMotion;
	double _smoothedIncrementalMotion;
	double _cumulativeMotion;
	double _cumulativeMotionEnvelope;
	double _cumulativeMotionSkipped;
	BOOL _hasSignificantMotion;
	CGPoint _movementVelocityInPointsPerSecond;
	CGPoint _centroidPoint;
	double _recognitionStartTimestamp;

}

@property (assign,nonatomic) unsigned long long minTouches; 
@property (assign,nonatomic) double animationDistance;                                 //@synthesize animationDistance=_animationDistance - In the implementation block
@property (assign,nonatomic) double accelerationThreshold;                             //@synthesize accelerationThreshold=_accelerationThreshold - In the implementation block
@property (assign,nonatomic) double accelerationPower;                                 //@synthesize accelerationPower=_accelerationPower - In the implementation block
@property (assign,nonatomic) int requiredDirectionality;                               //@synthesize requiredDirectionality=_requiredDirectionality - In the implementation block
@property (nonatomic,readonly) int degreeOfFreedom; 
@property (nonatomic,readonly) double cumulativePercentage; 
@property (nonatomic,readonly) double skippedCumulativePercentage; 
@property (nonatomic,readonly) double cumulativeMotion; 
@property (nonatomic,readonly) double incrementalMotion; 
@property (nonatomic,readonly) CGPoint movementVelocityInPointsPerSecond;              //@synthesize movementVelocityInPointsPerSecond=_movementVelocityInPointsPerSecond - In the implementation block
@property (nonatomic,readonly) CGPoint centroidPoint;                                  //@synthesize centroidPoint=_centroidPoint - In the implementation block
@property (nonatomic,readonly) double activeRecognitionDuration; 
-(double)cumulativePercentage;
-(long long)completionTypeProjectingMomentumForInterval:(double)arg1 ;
-(void)skipCumulativeMotion;
-(double)skippedCumulativePercentage;
-(CGPoint)centroidPoint;
-(CGPoint)movementVelocityInPointsPerSecond;
-(double)animationDistance;
-(double)cumulativeMotion;
-(double)activeRecognitionDuration;
-(void)touchesBegan:(SBGestureContextRef)arg1 ;
-(void)touchesMoved:(SBGestureContextRef)arg1 ;
-(void)touchesEnded:(SBGestureContextRef)arg1 ;
-(void)touchesCancelled:(SBGestureContextRef)arg1 ;
-(double)activeTouchTimestamp;
-(double)computeIncrementalGestureMotion:(SBGestureContextRef)arg1 ;
-(double)projectMotionForInterval:(double)arg1 ;
-(void)computeGestureMotion:(SBGestureContextRef)arg1 ;
-(void)computeHasSignificantMotionIfNeeded:(SBGestureContextRef)arg1 ;
-(void)computeCentroidPoint:(SBGestureContextRef)arg1 ;
-(void)updateForBeganOrMovedTouches:(SBGestureContextRef)arg1 ;
-(void)updateForEndedOrCancelledTouches:(SBGestureContextRef)arg1 ;
-(double)incrementalMotion;
-(double)computeNonlinearSpeedGain:(double)arg1 ;
-(double)computeHandSizeCompensationGain:(double)arg1 ;
-(int)degreeOfFreedom;
-(unsigned long long)minTouches;
-(void)setMinTouches:(unsigned long long)arg1 ;
-(void)setAnimationDistance:(double)arg1 ;
-(double)accelerationThreshold;
-(void)setAccelerationThreshold:(double)arg1 ;
-(double)accelerationPower;
-(void)setAccelerationPower:(double)arg1 ;
-(int)requiredDirectionality;
-(void)setRequiredDirectionality:(int)arg1 ;
-(id)init;
-(void)setState:(int)arg1 ;
-(void)reset;
@end


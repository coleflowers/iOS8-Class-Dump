/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, June 5, 2018 at 10:39:49 PM China Standard Time
* Operating System: Version 8.2 (Build 12D508)
* Image Source: /private/var/db/stash/_.8k0vmU/Applications/Podcasts.app/Podcasts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Podcasts/Podcasts-Structs.h>
#import <Podcasts/IMAVPlayer.h>
#import <Podcasts/IMAVPlayerDelegate.h>

@protocol IMMediaItem, IMMediaPlayerDelegate;
@class IMPlayerManifest, NSString;

@interface IMMediaPlayer : IMAVPlayer <IMAVPlayerDelegate> {

	IMPlayerManifest* _manifest;
	id<IMMediaItem> _currentMediaItem;
	struct {
		unsigned delegateShouldPlayItem : 1;
		unsigned delegateChapterStarted : 1;
		unsigned delegateStateChanged : 1;
		unsigned delegateErrorDidOccur : 1;
		unsigned delegateCurrentItemChanged : 1;
		unsigned delegateCurrentItemInfoChanged : 1;
		unsigned delegatePeriodicUpdate : 1;
	}  _mediaDelegateFlags;
	id<IMMediaPlayerDelegate> _mediaDelegate;
	long long _currentChapterIndex;
	NSRange _currentChapterRange;
	BOOL _ignorePlayStatusUpdate;
	long long _seekingChapterIndex;
	double _seekingChapterTimeOffset;

}

@property (nonatomic,retain) IMPlayerManifest * manifest;                          //@synthesize manifest=_manifest - In the implementation block
@property (assign,nonatomic) id<IMMediaPlayerDelegate> mediaDelegate;              //@synthesize mediaDelegate=_mediaDelegate - In the implementation block
@property (nonatomic,retain) id<IMMediaItem> currentMediaItem;                     //@synthesize currentMediaItem=_currentMediaItem - In the implementation block
@property (assign,nonatomic) double currentMediaTime; 
@property (nonatomic,readonly) double mediaDuration; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)previousMediaItem;
-(void)setCurrentMediaTime:(double)arg1 ;
-(void)nextMediaItem;
-(void)playerStateChanged:(id)arg1 ;
-(void)playerLoadStateChanged:(id)arg1 ;
-(void)playerDurationAvailable:(id)arg1 ;
-(void)playerLoadedDurationChanged:(id)arg1 ;
-(void)playerMediaTypeAvailable:(id)arg1 ;
-(void)playerCurrentItemChanged:(id)arg1 ;
-(void)playerCurrentItemStopped:(id)arg1 ;
-(void)playerCurrentItemEnded:(id)arg1 ;
-(BOOL)playerShouldPlayMore:(id)arg1 ;
-(void)playerErrorDidOccur:(id)arg1 error:(id)arg2 ;
-(void)player:(id)arg1 callbackForTime:(double)arg2 ;
-(void)playerPeriodicUpdate:(id)arg1 elapsed:(double)arg2 duration:(double)arg3 isFinished:(BOOL)arg4 ;
-(void)setMediaDelegate:(id<IMMediaPlayerDelegate>)arg1 ;
-(long long)currentChapter;
-(void)previousChapter;
-(void)nextChapter;
-(void)setCurrentMediaItem:(id<IMMediaItem>)arg1 ;
-(void)goToChapter:(long long)arg1 ;
-(double)mediaDuration;
-(void)updateNowPlayingInfo;
-(void)onChaptersLoaded:(id)arg1 ;
-(void)loadChaptersInAssetURL:(id)arg1 ;
-(BOOL)loadChapter:(long long)arg1 offset:(double)arg2 ;
-(void)nextMediaItemUserDriven:(BOOL)arg1 ;
-(BOOL)hasNextItem;
-(void)triggerChapterAt:(double)arg1 ;
-(id<IMMediaPlayerDelegate>)mediaDelegate;
-(void)setScrubbing:(BOOL)arg1 ;
-(void)play;
-(id<IMMediaItem>)currentMediaItem;
-(void)dealloc;
-(id)init;
-(double)currentMediaTime;
-(IMPlayerManifest *)manifest;
-(void)setManifest:(IMPlayerManifest *)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, June 5, 2018 at 10:50:08 PM China Standard Time
* Operating System: Version 8.2 (Build 12D508)
* Image Source: /private/var/db/stash/_.8k0vmU/Applications/MobileSafari.app/MobileSafari
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MobileSafari/MobileSafari-Structs.h>
#import <MobileSafari/CloudTabStoreDelegate.h>
#import <MobileSafari/TabOverviewDelegate.h>
#import <MobileSafari/TiltedTabViewDelegate.h>
#import <MobileSafari/RecentlyClosedTabViewControllerDelegate.h>
#import <MobileSafari/TabBarDelegate.h>

@class BrowserController, NSMutableArray, TabDocument, NSTimer, CloudTabStore, NSMutableSet, GestureRecognizingBarButtonItem, RecentlyClosedTabViewController, TabBar, TiltedTabView, UIButton, TabOverview, NSArray, NSString;

@interface TabController : NSObject <CloudTabStoreDelegate, TabOverviewDelegate, TiltedTabViewDelegate, RecentlyClosedTabViewControllerDelegate, TabBarDelegate> {

	BrowserController* _browserController;
	NSMutableArray* _normalTabDocuments;
	NSMutableArray* _privateTabDocuments;
	TabDocument* _normalActiveTabDocument;
	TabDocument* _privateActiveTabDocument;
	NSTimer* _saveStateTimer;
	NSTimer* _stateValidateTimer;
	CloudTabStore* _cloudTabStore;
	BOOL _cloudTabUpdatesEnabled;
	TabDocument* _tabDocumentBeingHiddenFromTabView;
	NSMutableSet* _tabDocumentsAboutToBeClosedInTiltedTabView;
	GestureRecognizingBarButtonItem* _tiltedTabViewAddTabButton;
	BOOL _tiltedTabViewIsShowing;
	NSTimer* _updateContinuityTimer;
	BOOL _canCloseLastTabViewTab;
	BOOL _tabBarItemsFixed;
	BOOL _tabViewItemsFixed;
	RecentlyClosedTabViewController* _recentlyClosedTabController;
	BOOL _tabExposeButtonIndicatorExcludesBlankDocuments;
	BOOL _privateBrowsingEnabled;
	BOOL _usesTiltedTabView;
	TabBar* _tabBar;
	unsigned long long _maximumTabDocumentCount;
	TiltedTabView* _tiltedTabView;
	UIButton* _tiltedTabViewPrivateBrowsingButton;
	TabOverview* _tabOverview;

}

@property (nonatomic,copy,readonly) NSArray * tabDocuments;                                                //@synthesize normalTabDocuments=_normalTabDocuments - In the implementation block
@property (nonatomic,copy,readonly) NSArray * privateTabDocuments;                                         //@synthesize privateTabDocuments=_privateTabDocuments - In the implementation block
@property (nonatomic,copy,readonly) NSArray * currentTabDocuments; 
@property (nonatomic,copy,readonly) NSArray * allTabDocuments; 
@property (nonatomic,retain) TabDocument * activeTabDocument; 
@property (nonatomic,readonly) unsigned long long maximumTabDocumentCount;                                 //@synthesize maximumTabDocumentCount=_maximumTabDocumentCount - In the implementation block
@property (assign,getter=isPrivateBrowsingEnabled,nonatomic) BOOL privateBrowsingEnabled;                  //@synthesize privateBrowsingEnabled=_privateBrowsingEnabled - In the implementation block
@property (nonatomic,readonly) CloudTabStore * cloudTabStore;                                              //@synthesize cloudTabStore=_cloudTabStore - In the implementation block
@property (nonatomic,retain,readonly) TabBar * tabBar;                                                     //@synthesize tabBar=_tabBar - In the implementation block
@property (assign,nonatomic) BOOL usesTabBar; 
@property (nonatomic,readonly) RecentlyClosedTabViewController * recentlyClosedTabController; 
@property (assign,nonatomic) BOOL tabExposeButtonIndicatorExcludesBlankDocuments;                          //@synthesize tabExposeButtonIndicatorExcludesBlankDocuments=_tabExposeButtonIndicatorExcludesBlankDocuments - In the implementation block
@property (nonatomic,retain,readonly) TiltedTabView * tiltedTabView;                                       //@synthesize tiltedTabView=_tiltedTabView - In the implementation block
@property (assign,nonatomic) BOOL usesTiltedTabView;                                                       //@synthesize usesTiltedTabView=_usesTiltedTabView - In the implementation block
@property (nonatomic,readonly) NSArray * tiltedTabViewToolbarItems; 
@property (nonatomic,readonly) UIButton * tiltedTabViewPrivateBrowsingButton;                              //@synthesize tiltedTabViewPrivateBrowsingButton=_tiltedTabViewPrivateBrowsingButton - In the implementation block
@property (nonatomic,retain,readonly) TabOverview * tabOverview;                                           //@synthesize tabOverview=_tabOverview - In the implementation block
@property (assign,nonatomic) BOOL usesTabOverview; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)saveStateInBackground:(BOOL)arg1 ;
-(BOOL)readState;
-(void)setStateNeedsSaved;
-(void)saveStateInBackground:(BOOL)arg1 needsValidate:(BOOL)arg2 ;
-(void)_saveStateFromTimer:(id)arg1 ;
-(void)_setSaveStateTimer:(id)arg1 ;
-(void)_clearStateValidateTimer;
-(id)_persistentStateDictionaryForTabs:(id)arg1 ;
-(void)_validateSavedState:(id)arg1 ;
-(void)_restorePersistentDocumentState:(id)arg1 into:(id)arg2 withCurrentActiveDocument:(id)arg3 activeDocumentIsValid:(BOOL)arg4 restoredActiveDocumentIndex:(unsigned long long)arg5 ;
-(TabDocument *)activeTabDocument;
-(void)suspendForEventsOnly:(BOOL)arg1 ;
-(NSArray *)allTabDocuments;
-(TiltedTabView *)tiltedTabView;
-(id)initWithBrowserController:(id)arg1 ;
-(void)insertNewTabDocument:(id)arg1 openedFromTabDocument:(id)arg2 inBackground:(BOOL)arg3 animated:(BOOL)arg4 ;
-(void)closeAllOpenTabsAnimated:(BOOL)arg1 exitTabView:(BOOL)arg2 ;
-(void)closeTabDocument:(id)arg1 animated:(BOOL)arg2 ;
-(id)tabDocumentForWebView:(id)arg1 ;
-(void)setActiveTabDocument:(id)arg1 animated:(BOOL)arg2 ;
-(void)clearBrowserController;
-(void)setTabExposeButtonIndicatorExcludesBlankDocuments:(BOOL)arg1 ;
-(CloudTabStore *)cloudTabStore;
-(void)pausePagesWithEventsForActiveDocument:(BOOL)arg1 ;
-(BOOL)usesTabBar;
-(NSArray *)currentTabDocuments;
-(void)setUsesTiltedTabView:(BOOL)arg1 ;
-(void)setUsesTabOverview:(BOOL)arg1 ;
-(TabOverview *)tabOverview;
-(NSArray *)tiltedTabViewToolbarItems;
-(void)setUsesTabBar:(BOOL)arg1 ;
-(void)updateTabBarAnimated:(BOOL)arg1 ;
-(void)openInitialBlankTabDocumentIfNeeded;
-(void)updateTabExposeButtonIndicator;
-(void)replaceTabDocument:(id)arg1 withTabDocument:(id)arg2 ;
-(void)openBlankTabDocumentInTabBar;
-(RecentlyClosedTabViewController *)recentlyClosedTabController;
-(BOOL)usesTabOverview;
-(void)insertNewBlankTabDocumentAnimated:(BOOL)arg1 ;
-(BOOL)canAddNewTab;
-(void)updateTiltedTabViewToolbarItems;
-(id)tabDocumentForURL:(id)arg1 ;
-(void)setActiveTabDocument:(TabDocument *)arg1 ;
-(void)_addTabLongPressRecognized:(id)arg1 ;
-(void)cloudTabStore:(id)arg1 cloudTabsEnabledDidChange:(BOOL)arg2 ;
-(void)cloudTabStore:(id)arg1 didReceiveTabCloseRequest:(id)arg2 ;
-(void)saveTabDocumentContinuityActivitySoon:(id)arg1 ;
-(void)setMaximumTabDocumentCountForTesting:(unsigned long long)arg1 ;
-(NSArray *)tabDocuments;
-(unsigned long long)maximumTabDocumentCount;
-(void)recentlyClosedTabViewController:(id)arg1 didSelectTabDocument:(id)arg2 ;
-(void)updateCloudTabs;
-(BOOL)tiltedTabView:(id)arg1 canCloseItem:(id)arg2 ;
-(void)tiltedTabView:(id)arg1 closeItem:(id)arg2 ;
-(void)tiltedTabView:(id)arg1 didMoveItem:(id)arg2 overItem:(id)arg3 ;
-(void)tiltedTabView:(id)arg1 didSelectItem:(id)arg2 ;
-(void)tiltedTabView:(id)arg1 relinquishContentView:(id)arg2 forItem:(id)arg3 ;
-(void)tiltedTabViewDidPresent:(id)arg1 ;
-(void)tiltedTabViewDidDismiss:(id)arg1 ;
-(id)currentItemForTiltedTabView:(id)arg1 ;
-(void)tiltedTabViewWillPresent:(id)arg1 ;
-(void)tiltedTabViewWillDismiss:(id)arg1 ;
-(id)tiltedTabView:(id)arg1 borrowContentViewForItem:(id)arg2 withTopBackdropView:(id*)arg3 ofHeight:(double)arg4 ;
-(double)tiltedTabView:(id)arg1 headerHeightForItem:(id)arg2 ;
-(void)tiltedTabView:(id)arg1 animateTopBackdropView:(id)arg2 hidden:(BOOL)arg3 ;
-(id)blankSnapshotForTiltedTabView:(id)arg1 topBackdropHeight:(double)arg2 ;
-(void)tiltedTabView:(id)arg1 requestSnapshotOfSize:(CGSize)arg2 topBackdropHeight:(double)arg3 forItem:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)tiltedTabView:(id)arg1 didSelectNavigationDestination:(id)arg2 ;
-(void)tiltedTabView:(id)arg1 closeCloudTab:(id)arg2 onDevice:(id)arg3 ;
-(void)tabBarAddTab:(id)arg1 ;
-(void)tabBar:(id)arg1 closeItem:(id)arg2 ;
-(BOOL)tabBar:(id)arg1 canCloseItem:(id)arg2 ;
-(void)tabBar:(id)arg1 activateItem:(id)arg2 ;
-(BOOL)tabBar:(id)arg1 canMoveItem:(id)arg2 ;
-(void)tabBar:(id)arg1 moveItem:(id)arg2 overItem:(id)arg3 ;
-(void)_auditTabCount;
-(void)logTabActivationInterval:(double)arg1 forActivationType:(long long)arg2 ;
-(BOOL)usesTiltedTabView;
-(void)_switchActiveTabDocumentFromTabDocument:(id)arg1 toTabDocument:(id)arg2 ;
-(id)_currentTabs;
-(id)_oldestInactiveTabDocument;
-(void)_makeRoomForNewTabDocument:(id)arg1 ;
-(void)_tabCountDidChange;
-(void)_updateTiltedTabViewItems;
-(void)_updateTabOverviewItems;
-(void)_updateTabBarAnimated:(BOOL)arg1 keepingDocumentVisible:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_insertTabDocument:(id)arg1 afterTabDocument:(id)arg2 inBackground:(BOOL)arg3 animated:(BOOL)arg4 ;
-(id)_insertNewBlankTabDocumentInBackground:(BOOL)arg1 animated:(BOOL)arg2 ;
-(id)_openBlankTabDocument;
-(void)_setTabBarItemsFixed:(BOOL)arg1 ;
-(BOOL)_shouldFocusPreviousDocumentWhenClosingDocument:(id)arg1 ;
-(void)_logActivationForTab:(id)arg1 ;
-(void)_updateTiltedTabViewItemsAnimated:(BOOL)arg1 ;
-(void)_updateTiltedTabViewItemsWithTransition:(long long)arg1 ;
-(void)_suppressSingleEmptyTabIfAppropriate;
-(void)_updateExplanationViewVisibility;
-(id)_tabDocumentRepresentedByTabBarItem:(id)arg1 ;
-(void)moveTabDocument:(id)arg1 overTabDocument:(id)arg2 ;
-(void)_addRecentlyClosedTabDocument:(id)arg1 ;
-(BOOL)_createAndSwitchToNewBlankTabDocumentOpeningCaptiveLandingPageIfNecessary;
-(BOOL)_shouldShowExplanationView;
-(void)_cloudTabsDidUpdate:(id)arg1 ;
-(void)_setCloudTabUpdatesEnabled:(BOOL)arg1 ;
-(void)_updateCloudTabUpdatesEnabled;
-(void)_updateUsesTiltedTabView;
-(void)_updateTiltedTabViewCloudTabs;
-(void)_updateTabOverviewCloudTabs;
-(void)_addNewActiveTiltedTabViewTab;
-(void)_dismissTiltedTabView;
-(id)_tabDocumentRepresentedByTiltedTabItem:(id)arg1 ;
-(void)_addNewActiveTiltedTabViewTabWithNavigationDestination:(id)arg1 ;
-(id)_tabDocumentRepresentedByTabOverviewItem:(id)arg1 ;
-(id)_tabDocumentForURL:(id)arg1 withUUID:(id)arg2 ;
-(void)_updateContinuityTimerFired;
-(void)_cancelPendingUpdateContinuityActivityTimer;
-(void)tabOverviewWillPresent:(id)arg1 ;
-(void)tabOverviewDidDismiss:(id)arg1 ;
-(void)tabOverviewDidBeginDismissal:(id)arg1 ;
-(void)tabOverviewDidCancelDismissal:(id)arg1 ;
-(id)currentItemForTabOverview:(id)arg1 ;
-(void)tabOverviewAddTab:(id)arg1 ;
-(void)tabOverview:(id)arg1 didSelectItem:(id)arg2 ;
-(BOOL)tabOverview:(id)arg1 canCloseItem:(id)arg2 ;
-(void)tabOverview:(id)arg1 closeItem:(id)arg2 ;
-(void)tabOverview:(id)arg1 didMoveItem:(id)arg2 overItem:(id)arg3 ;
-(double)tabOverview:(id)arg1 headerHeightForItem:(id)arg2 ;
-(id)tabOverview:(id)arg1 borrowContentViewForItem:(id)arg2 topBackdropHeight:(double)arg3 ;
-(void)tabOverview:(id)arg1 relinquishContentView:(id)arg2 forItem:(id)arg3 ;
-(void)tabOverview:(id)arg1 requestSnapshotOfSize:(CGSize)arg2 topBackdropHeight:(double)arg3 forItem:(id)arg4 completion:(/*^block*/id)arg5 ;
-(id)blankSnapshotForTabOverview:(id)arg1 topBackdropHeight:(double)arg2 ;
-(BOOL)tabOverview:(id)arg1 item:(id)arg2 matchesSearchText:(id)arg3 ;
-(void)tabOverview:(id)arg1 didSelectNavigationDestination:(id)arg2 ;
-(void)tabOverview:(id)arg1 closeCloudTab:(id)arg2 onDevice:(id)arg3 ;
-(void)tabOverviewDidPressDoneButton:(id)arg1 ;
-(void)updateTabBarAnimated:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)_handlePendingCloseTabRequests;
-(NSArray *)privateTabDocuments;
-(BOOL)tabExposeButtonIndicatorExcludesBlankDocuments;
-(BOOL)isPrivateBrowsingEnabled;
-(UIButton *)tiltedTabViewPrivateBrowsingButton;
-(void)dealloc;
-(TabBar *)tabBar;
-(void)resume;
-(void)popoverControllerDidDismissPopover:(id)arg1 ;
-(void)setPrivateBrowsingEnabled:(BOOL)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, June 5, 2018 at 6:38:23 PM China Standard Time
* Operating System: Version 8.2 (Build 12D508)
* Image Source: /private/var/db/stash/_.8k0vmU/Applications/Maps.app/Maps
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Maps/Maps-Structs.h>
#import <Maps/MNLocationTracker.h>
#import <Maps/MNGuidanceManagerDelegate.h>
#import <Maps/MNRouteManagerDelegate.h>

@protocol MNNavigatorTestingDelegate;
@class NSTimer, MNMapMatcher, MNGuidanceManager, MNNavigationAudioSession, MNMotionContext, MNLocation, GEOMapRegion, GEOComposedWaypoint, NSString;

@interface MNNavigator : MNLocationTracker <MNGuidanceManagerDelegate, MNRouteManagerDelegate> {

	id<MNNavigatorTestingDelegate> _testingDelegate;
	NSTimer* _locationUpdateOverdueTimer;
	MNMapMatcher* _mapMatcher;
	MNGuidanceManager* _guidanceManager;
	MNNavigationAudioSession* _audioSession;
	BOOL _hasGuidanceManagerConfiguredCameraFocus;
	MNMotionContext* _motionContext;
	int _state;
	BOOL _guidanceEnabled;
	int _detectedTransportType;
	SCD_Struct_RA0 _detectedTransportTypeOrigin;
	BOOL _switchTransportTypeOnReroute;
	long long _responseErrorCode;
	unsigned long long _responseErrorCount;
	MNLocation* _lastTrackedLocation;
	unsigned long long _sameLocationPushCounter;
	MNLocation* _lastLocationUsedForReroute;
	unsigned long long _reroutesOnFeature;
	double _firstPauseTime;
	unsigned long long _recalculationNetworkUnreachableCount;
	NSTimer* _recalculationRetryTimer;
	GEOMapRegion* _arrivalMapRegion;
	BOOL _paused;

}

@property (nonatomic,readonly) GEOComposedWaypoint * destination; 
@property (nonatomic,readonly) MNLocation * lastMatchedLocation; 
@property (nonatomic,readonly) GEOMapRegion * arrivalMapRegion; 
@property (getter=isPaused,nonatomic,readonly) BOOL paused;                              //@synthesize paused=_paused - In the implementation block
@property (nonatomic,readonly) long long responseErrorCode;                              //@synthesize responseErrorCode=_responseErrorCode - In the implementation block
@property (nonatomic,readonly) unsigned long long responseErrorCount;                    //@synthesize responseErrorCount=_responseErrorCount - In the implementation block
@property (nonatomic,readonly) BOOL isNavigating; 
@property (assign,getter=isGuidanceEnabled,nonatomic) BOOL guidanceEnabled;              //@synthesize guidanceEnabled=_guidanceEnabled - In the implementation block
@property (assign,nonatomic) int state;                                                  //@synthesize state=_state - In the implementation block
@property (nonatomic,retain) NSTimer * locationUpdateOverdueTimer;                       //@synthesize locationUpdateOverdueTimer=_locationUpdateOverdueTimer - In the implementation block
@property (nonatomic,retain) MNGuidanceManager * guidanceManager;                        //@synthesize guidanceManager=_guidanceManager - In the implementation block
@property (nonatomic,retain) MNMapMatcher * mapMatcher;                                  //@synthesize mapMatcher=_mapMatcher - In the implementation block
@property (nonatomic,retain) MNLocation * lastTrackedLocation;                           //@synthesize lastTrackedLocation=_lastTrackedLocation - In the implementation block
@property (nonatomic,retain) MNLocation * lastLocationUsedForReroute;                    //@synthesize lastLocationUsedForReroute=_lastLocationUsedForReroute - In the implementation block
@property (assign,nonatomic) unsigned long long reroutesOnFeature;                       //@synthesize reroutesOnFeature=_reroutesOnFeature - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)matchedToEndOfLeg:(id)arg1 onRoute:(id)arg2 withRouteMatch:(id)arg3 andLocation:(id)arg4 ;
-(void)setGuidanceEnabled:(BOOL)arg1 ;
-(void)guidanceManager:(id)arg1 updatePointOfInterest:(SCD_Struct_RA0)arg2 focusStyle:(int)arg3 ;
-(void)guidanceManagerProceedingToRoute:(id)arg1 proceedToRouteDistance:(double)arg2 displayString:(id)arg3 remainingTime:(double)arg4 remainingDistance:(double)arg5 closestStepIndex:(unsigned long long)arg6 ;
-(void)guidanceManagerHasArrived:(id)arg1 announce:(id)arg2 ;
-(void)guidanceManagerHasReachedEndOfLeg:(id)arg1 announce:(id)arg2 ;
-(void)guidanceManager:(id)arg1 displayManeuverAlertForAnnouncementStage:(unsigned long long)arg2 ;
-(void)guidanceManager:(id)arg1 willAnnounce:(unsigned long long)arg2 inSeconds:(double)arg3 ;
-(void)guidanceManagerDidUpdateProgress:(id)arg1 remainingTime:(double)arg2 remainingDistance:(double)arg3 currentStepIndex:(unsigned long long)arg4 distanceUntilManeuver:(double)arg5 timeUntilManeuver:(double)arg6 ;
-(BOOL)guidanceManagerIsOffRoute:(id)arg1 location:(id)arg2 stepIndex:(unsigned long long)arg3 ;
-(void)guidanceManagerHideSecondaryStep:(id)arg1 ;
-(void)guidanceManager:(id)arg1 announce:(id)arg2 shortPromptType:(long long)arg3 stage:(unsigned long long)arg4 hasSecondaryManeuver:(BOOL)arg5 completionBlock:(/*^block*/id)arg6 ;
-(void)guidanceManager:(id)arg1 displayPrimaryStepManeuverType:(int)arg2 junctionType:(int)arg3 junctionElements:(SCD_Struct_Di9*)arg4 count:(unsigned long long)arg5 instructions:(id)arg6 shorterAlternativeInstructions:(id)arg7 shieldType:(int)arg8 shieldText:(id)arg9 drivingSide:(int)arg10 maneuverStepIndex:(unsigned long long)arg11 isSynthetic:(BOOL)arg12 ;
-(void)guidanceManager:(id)arg1 displaySecondaryStepManeuverType:(int)arg2 junctionType:(int)arg3 junctionElements:(SCD_Struct_Di9*)arg4 count:(unsigned long long)arg5 instructions:(id)arg6 shorterAlternativeInstructions:(id)arg7 shieldType:(int)arg8 shieldText:(id)arg9 drivingSide:(int)arg10 ;
-(MNLocation *)lastMatchedLocation;
-(BOOL)isGuidanceEnabled;
-(BOOL)repeatCurrentGuidance;
-(void)speak:(id)arg1 shortPromptType:(long long)arg2 ;
-(void)routeManagerDidChangeState:(id)arg1 newRouteState:(int)arg2 ;
-(void)routeManager:(id)arg1 didChangeRoutePreloadSession:(id)arg2 ;
-(void)routeManager:(id)arg1 recordRouteRequest:(id)arg2 ;
-(void)routeManagerDidCancelRoute:(id)arg1 errorCode:(long long)arg2 ;
-(void)routeManagerWillRequestRoute:(id)arg1 traceRecorderFailed:(BOOL)arg2 ;
-(void)routeManagerDidFailToRecalculateRoute:(id)arg1 previousRoute:(id)arg2 errorCode:(long long)arg3 ;
-(void)routeManagerWillRecalculateRoute:(id)arg1 ;
-(void)routeManager:(id)arg1 didSwitchToNewRoute:(id)arg2 alreadyOnRoute:(BOOL)arg3 forcedSwitch:(BOOL)arg4 ;
-(void)routeManager:(id)arg1 recordRouteResponse:(id)arg2 ;
-(void)routeManager:(id)arg1 didReceiveRouteSet:(id)arg2 ;
-(void)routeManager:(id)arg1 didRecalculateNewRoute:(id)arg2 ;
-(id)testingDelegate;
-(void)routeManagerDidFailToReceiveRoute:(id)arg1 error:(id)arg2 ;
-(void)routeManager:(id)arg1 failedWithError:(id)arg2 ;
-(void)routeManagerUpdatedETA:(id)arg1 ;
-(void)routeManagerUpdatedTrafficIncidents:(id)arg1 ;
-(void)routeManager:(id)arg1 recommendsNewRoute:(id)arg2 etaRoute:(id)arg3 oldEstimatedTime:(unsigned)arg4 newEstimatedTime:(unsigned)arg5 ;
-(void)startTrackingWithGuidanceEnabled:(BOOL)arg1 midRoute:(BOOL)arg2 ;
-(id)initWithNavigationSession:(id)arg1 ;
-(void)switchToNewRoute:(id)arg1 etaRoute:(id)arg2 ;
-(id)routeRepresentation;
-(void)resetForTracePlayerAtLocation:(id)arg1 ;
-(BOOL)shouldAllowPause;
-(void)updateVehicleSpeed:(double)arg1 timestamp:(id)arg2 ;
-(NSTimer *)locationUpdateOverdueTimer;
-(MNGuidanceManager *)guidanceManager;
-(void)clearGuidanceManager;
-(void)_setUpGuidanceManagerWithAttributedRoute:(id)arg1 allowMidRouteStart:(BOOL)arg2 ;
-(long long)_clActivityType;
-(void)_announceStart;
-(id)_newMapMatcher;
-(id)_filterLocationUpdateWithLocation:(id)arg1 navCourse:(double)arg2 ;
-(MNMapMatcher *)mapMatcher;
-(void)speak:(id)arg1 shortPromptType:(long long)arg2 ignorePromptStyle:(BOOL)arg3 ;
-(void)retryLastRouteRecalc;
-(void)_recalculationRetryTimerFired:(id)arg1 ;
-(void)setMapMatcher:(MNMapMatcher *)arg1 ;
-(void)setLastLocationUsedForReroute:(MNLocation *)arg1 ;
-(void)setResponseErrorCode:(long long)arg1 ;
-(void)setLocationUpdateOverdueTimer:(NSTimer *)arg1 ;
-(void)_resetMapMatcherToLocation:(id)arg1 onRoute:(id)arg2 ;
-(void)restartNavigator;
-(MNLocation *)lastTrackedLocation;
-(void)setGuidanceManager:(MNGuidanceManager *)arg1 ;
-(void)_locationUpdateOverdueFireMethod:(id)arg1 ;
-(BOOL)_courseOverride:(id)arg1 courseOverride:(double*)arg2 courseAccuracy:(double*)arg3 ;
-(void)_resetLocationUpdateOverdueTimerWhenProjecting:(BOOL)arg1 ;
-(int)_checkForArrivalState:(id)arg1 ;
-(BOOL)_checkIfNearEndOfRouteWithUncertainArrival:(id)arg1 ;
-(double)_distanceToForceReroute;
-(MNLocation *)lastLocationUsedForReroute;
-(BOOL)_allowNavigatorSwitchToTransportType:(int)arg1 atLocation:(id)arg2 ;
-(void)_updateStateForLocation:(id)arg1 ;
-(void)_updateNavigatorForDisabledGuidance:(id)arg1 ;
-(int)_checkForTransportTypeChange:(id)arg1 ;
-(BOOL)_exceedsReroutesThresholdsBetweenLocation:(id)arg1 andLocation:(id)arg2 ;
-(BOOL)_handleOffRouteFromLocation:(id)arg1 stepIndex:(unsigned long long)arg2 findContingencyOnly:(BOOL)arg3 forceRepeatedRecalc:(BOOL)arg4 ;
-(void)_updateDetectedMotionAtLocation:(id)arg1 ;
-(void)setLastTrackedLocation:(MNLocation *)arg1 ;
-(void)_updateLocation:(id)arg1 withPreviousLocation:(id)arg2 ;
-(void)_triggerArrivalAndAnnounce:(id)arg1 ;
-(BOOL)_shouldMatchToRouteAfterRecalculateFrom:(id)arg1 ;
-(void)_resetToCurrentLocationOnRoute:(id)arg1 ;
-(unsigned long long)responseErrorCount;
-(Class)_guidanceManagerClass;
-(unsigned long long)_indexOfGuidanceManager:(id)arg1 step:(id)arg2 ;
-(void)traceForcedRerouteWithResponse:(id)arg1 request:(id)arg2 ;
-(void)traceForcedActiveTransportTypeChange:(int)arg1 ;
-(void)toggleTracePlaying:(BOOL)arg1 ;
-(id)_stepForGuidanceManager:(id)arg1 step:(id)arg2 ;
-(long long)responseErrorCode;
-(unsigned long long)reroutesOnFeature;
-(void)setReroutesOnFeature:(unsigned long long)arg1 ;
-(int)_transportType;
-(void)dealloc;
-(int)state;
-(void)setState:(int)arg1 ;
-(void)resume;
-(GEOComposedWaypoint *)destination;
-(void)pause;
-(GEOMapRegion *)arrivalMapRegion;
-(BOOL)isNavigating;
-(void)stopTracking;
-(BOOL)isPaused;
-(int)transportType;
-(void)updateLocation:(id)arg1 ;
-(void)stopSpeaking;
@end

